{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","userId","classNames","TodoList","todos","map","todoWithUser","usersFromServer","find","App","useState","setTodos","setTitle","selectedUser","setSelectedUser","isTitleError","setIsTitleError","isUserNameError","setIsUserNameError","action","method","onSubmit","event","preventDefault","todosPrev","userName","maxTodoId","Math","max","newUser","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43767a52.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed, title, user, userId,\n  } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo key={userId} user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction findUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todoWithUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(todo.userId),\n}));\n\nfunction findUserByName(userName: string): User | null {\n  return usersFromServer.find(user => user.name === userName) || null;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todoWithUser);\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserNameError, setIsUserNameError] = useState(false);\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (selectedUser && title) {\n      setTodos(todosPrev => {\n        const maxTodoId = Math.max(...todosPrev.map(todo => todo.id));\n        const newUser = findUserByName(selectedUser);\n\n        setTitle('');\n        setSelectedUser('');\n\n        return [\n          ...todosPrev,\n          {\n            id: maxTodoId + 1,\n            userId: newUser ? newUser.id : null,\n            title,\n            completed: false,\n            user: newUser,\n          },\n        ];\n      });\n    }\n\n    if (!selectedUser) {\n      setIsUserNameError(true);\n    }\n\n    if (!title) {\n      setIsTitleError(true);\n    }\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitleError(false);\n  };\n\n  const handleChangeSelectedUser\n    = (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setSelectedUser(event.target.value);\n      setIsUserNameError(false);\n    };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"text\">Title: </label>\n          <input\n            data-cy=\"titleInput\"\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleChangeTitle}\n          />\n\n          {isTitleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"userSelect\"\n            value={selectedUser}\n            onChange={handleChangeSelectedUser}\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.name}>{user.name}</option>\n            ))}\n          </select>\n\n          {isUserNameError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}